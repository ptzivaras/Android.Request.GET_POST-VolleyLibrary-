    public void mypost(){


        JSONObject object = new JSONObject();
//        try {
//            //input your API parameters
//            object.put("usernameOrEmail",Email.getText());
//            object.put("password",password.getText());
//        } catch (JSONException e) {
//            e.printStackTrace();
//        }
        String uurl = getString(R.string.base_url) + getString(R.string.post_sessions_url);
        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.POST, uurl, object,
                new Response.Listener<JSONObject>() {

                    @Override
                    public void onResponse(JSONObject response) {
//                        Toast.makeText(Login_screen.this,"String Response : "+ response.toString(),Toast.LENGTH_LONG).show();
                        Log.d("sad","sad");
                        try {
                            Log.d("JSON", String.valueOf(response));
                            String Error = response.getString("httpStatus");
                            if (Error.equals("")||Error.equals(null)){

                            }else if(Error.equals("OK")){
                                JSONObject body = response.getJSONObject("body");

                            }else {

                            }

                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
//                        resultTextView.setText("String Response : "+ response.toString());
                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                VolleyLog.d("Error", "Error: " + error.getMessage());
            }
        });
        RequestQueue requestQueue = Volley.newRequestQueue(getContext());
        requestQueue.add(jsonObjectRequest);
    }

    public void mypost2(){

        //String apikeytemp= prefs.getApikey();
        //String myParameter="123";
        //String myHeader="456";

        prefs = SharedPrefManager.getInstance(getContext()).getUser();

        String postString = "JSON DATA";

        String URL = getString(R.string.base_url) + getString(R.string.post_sessions_url);

        RequestQueue mQueue = VolleySingleton.getInstance(getContext()).getRequestQueue();

        StringRequest request = new StringRequest(Request.Method.POST, URL,  new com.android.volley.Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                Log.d("TAG",response);

                try {
                    JSONObject objson = new JSONObject(response);

                } catch (Throwable t) {
                    Log.e("tag", "Could not parse malformed JSON: \"" + response + "\"");
                }
            }
        }, new com.android.volley.Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                if (error == null || error.networkResponse == null) {
                    return;
                }

                String body;
                //get status code here
                final String statusCode = String.valueOf(error.networkResponse.statusCode);

                if (statusCode.equals("401")) {
                }

                //get response body and parse with appropriate encoding
                try {
                    body = new String(error.networkResponse.data, "UTF-8");


                } catch (UnsupportedEncodingException e) {
                    // exception
                }

                //do stuff with the body...
            }

        }) {
            @Override
            public Priority getPriority() {
                return Priority.HIGH;
            }

            @Override
            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String, String> params = new HashMap<>();
                //params.put("CodeId", myParameter);
                String apiKey = prefs.getApikey();
                apiKey="25ec0792d40a052c44e8064a37d693ddd4d6302c4a58a40e723f9077df64c45770acf44385a659b276106e8935236be231b9712df02e5a9c8aa6000eb1fca9fa";
                params.put("x-patient-api-key", apiKey);
                return params;
            }

            @Override
            public Map<String, String> getHeaders() throws AuthFailureError {
                Map<String, String> headers = new HashMap<>();
                //headers.put("x-patient-api-key", myHeader);

                // isos na valo edo to header

                String apiKey = prefs.getApikey();
                apiKey="25ec0792d40a052c44e8064a37d693ddd4d6302c4a58a40e723f9077df64c45770acf44385a659b276106e8935236be231b9712df02e5a9c8aa6000eb1fca9fa";
                headers.put("x-patient-api-key", apiKey);

                headers.put("Content-Type", "application/json; charset=UTF-8");
                prefs = SharedPrefManager.getInstance(getActivity()).getUser();

                String token = prefs.getToken();
                token="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0eXBlIjoiYWNjZXNzIiwiaXNzIjoic21hcnRpbnNvbGUiLCJhdWQiOiJzbWFydGluc29sZSIsImlhdCI6MTY2NDE4OTcwOSwiZXhwIjoxNjY0MTkzMzA5LCJzdWIiOiJjbDZxNno5bHQwNTM3YXNpc2lkdjVyemlvIiwidXNlcm5hbWUiOiJ0ZWNoMDEiLCJmaXJzdE5hbWUiOiJUZWNobmljaWFuIiwibGFzdE5hbWUiOiJPbmUiLCJlbWFpbCI6InRlY2gwMUBlbWFpbC5jb20iLCJyb2xlIjoiVGVjaG5pY2lhbiJ9.10E4YKbTlqP9TRiGaCKKxYYYBIbYbXPET-DY_U_a0NI";
                headers.put("x-token", token);

                return headers;
            }
        };
        mQueue.add(request);
    }

    public void mypost3(){


//        prefs = SharedPrefManager.getInstance(getContext()).getUser();
//
//        String token = prefs.getToken();
//
//        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getContext());
//        String apiKey = sp.getString("apiKey", "");
//
//        HashMap<String, Object> map = new HashMap<String, Object>();
//        map.put("", sessionModel);
//        String json = null;
//        JSONObject reqbody = new JSONObject();
//        try {
//            reqbody.put("", sessionModel);
//
//
//        } catch (JSONException e) {
//
//            e.printStackTrace();
//        }

        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());
        JSONObject object = new JSONObject();
        try {
            //input your API parameters
            object.put("parameter","value");
            object.put("parameter","value");
        } catch (JSONException e) {
            e.printStackTrace();
        }


        //TODO: Change every time the session id
        String string = "{\n" +
                "    \"product\": \"smartinsole\",\n" +
                "    \"version\": 0.1,\n" +
                "    \"releaseDate\": \"2020-05-05T00:00:00.000Z\",\n" +
                "    \"demo\": false,\n" +
                "    \"session\": {\n" +
                "        \"sessionId\": \"0000000046\",\n" +
                "        \"patientId\": \"0000000046\",\n" +
                "        \"insoleId\": \"0000000046\",\n" +
                "        \"startTime\": \"2020-05-05T00:00:00.000Z\",\n" +
                "        \"endTime\": \"2020-05-05T00:00:00.000Z\",\n" +
                "        \"isPart\": false,\n" +
                "        \"sessionType\": \"3\",\n" +
                "        \"insoleType\": \"moticon\",\n" +
                "        \"walkingSpeed\": \"na\",\n" +
                "        \"medication\": \"unknown\",\n" +
                "        \"group\": \"elderly\"\n" +
                "    },\n" +
                "    \"data\": [\n" +
                "        {\n" +
                "            \"timestamp\": 0.0,\n" +
                "            \"accLx\": 0.19043,\n" +
                "            \"accLy\": 0.038574,\n" +
                "            \"accLz\": 0.970215,\n" +
                "            \"gyroLx\": 1.33,\n" +
                "            \"gyroLy\": 4.62,\n" +
                "            \"gyroLz\": 0.49,\n" +
                "            \"magLx\": 0.49,\n" +
                "            \"magLy\": 0.49,\n" +
                "            \"magLz\": 0.49,\n" +
                "            \"pL01\": 5.25,\n" +
                "            \"pL02\": 4.75,\n" +
                "            \"pL03\": 5.25,\n" +
                "            \"pL04\": 3.5,\n" +
                "            \"pL05\": 5.25,\n" +
                "            \"pL06\": 1.25,\n" +
                "            \"pL07\": 0.75,\n" +
                "            \"pL08\": 0.0,\n" +
                "            \"pL09\": 0.5,\n" +
                "            \"pL10\": 2.0,\n" +
                "            \"pL11\": 2.5,\n" +
                "            \"pL12\": 0.0,\n" +
                "            \"pL13\": 0.0,\n" +
                "            \"pL14\": 0.75,\n" +
                "            \"pL15\": 0.25,\n" +
                "            \"pL16\": 0.0,\n" +
                "            \"grfL\": 372.0,\n" +
                "            \"accRx\": null,\n" +
                "            \"accRy\": null,\n" +
                "            \"accRz\": null,\n" +
                "            \"gyroRx\": null,\n" +
                "            \"gyroRy\": null,\n" +
                "            \"gyroRz\": null,\n" +
                "            \"magRx\": null,\n" +
                "            \"magRy\": null,\n" +
                "            \"magRz\": null,\n" +
                "            \"pR01\": null,\n" +
                "            \"pR02\": null,\n" +
                "            \"pR03\": null,\n" +
                "            \"pR04\": null,\n" +
                "            \"pR05\": null,\n" +
                "            \"pR06\": null,\n" +
                "            \"pR07\": null,\n" +
                "            \"pR08\": null,\n" +
                "            \"pR09\": null,\n" +
                "            \"pR10\": null,\n" +
                "            \"pR11\": null,\n" +
                "            \"pR12\": null,\n" +
                "            \"pR13\": null,\n" +
                "            \"pR14\": null,\n" +
                "            \"pR15\": null,\n" +
                "            \"pR16\": null,\n" +
                "            \"grfR\": null\n" +
                "        \n" +
                "       }\n" +
                "    ]\n" +
                "}";
        try {
            JSONObject json1 = new JSONObject(string);
            String postUrl = getString(R.string.base_url) + getString(R.string.post_sessions_url);
            JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.POST, postUrl, json1,
                    new Response.Listener<JSONObject>() {
                        @Override
                        public void onResponse(JSONObject response) {
                            Log.d("response", "");
                        }
                    }, new Response.ErrorListener() {
                @Override
                public void onErrorResponse(VolleyError error) {


                    Toast.makeText(getActivity(), "Error occurred", Toast.LENGTH_SHORT).show();
                }
            }) {
                @Override
                public Priority getPriority() {
                    return Priority.HIGH;
                }

                @Override
                protected Map<String, String> getParams() throws AuthFailureError {
                    Map<String, String> params = new HashMap<>();


                    String apiKey = prefs.getApikey();
                    params.put("x-patient-api-key", apiKey);

                    return params;
                }

                @Override
                public Map<String, String> getHeaders() throws AuthFailureError {
                    Map<String, String> headers = new HashMap<>();
                    headers.put("Content-Type", "application/json; charset=UTF-8");
                    prefs = SharedPrefManager.getInstance(getActivity()).getUser();

                    String token = prefs.getToken();
                    headers.put("x-token", token);
                    return headers;
                }

            };

            requestQueue.add(jsonObjectRequest);

        } catch (JSONException e) {
            e.printStackTrace();
        }

        ;



//        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(getContext());
//        String insoleID = preferences.getString("insoleId", "");
//        String patientID = preferences.getString("patientId", "");
//
//        //Setup sole session properties
//        SessionModel sessionModel = new SessionModel();
//        Session demoSession = new Session();
//        demoSession.setSessionId("");
//        demoSession.setPatientId("pat0100012");
//        demoSession.setInsoleId("ins0100012");
//        demoSession.setStartTime("2020-05-05T00:00:00.000Z");
//        demoSession.setEndTime("2020-05-05T00:00:00.000Z");
//        demoSession.setPart(false);
//        demoSession.setSessionType(3);
//
//        sessionModel.setSession(demoSession);
//
//
//        //Setup Sole data properties
//        List<Datum> datumList = new ArrayList<>();
//
//        for (int i = 0; i < mod.getData().size(); i++) {
//            Datum datum = new Datum();
//            datum.setTimestamp(mod.getData().get(i).getTimestamp());
//            datum.setAccLx(mod.getData().get(i).getAccLx());
//            datum.setAccLy(mod.getData().get(i).getAccLy());
//            datum.setAccLz(mod.getData().get(i).getAccLz());
//
//            datum.setGyroLx(mod.getData().get(i).getGyroLx());
//            datum.setGyroLy(mod.getData().get(i).getGyroLy());
//            datum.setGyroLz(mod.getData().get(i).getGyroLz());
//
//            //TODO:UOI must add Magn
////            datum.setMagnLx(0);
////            datum.setMagnLy(0);
////            datum.setMagnLz(0);
////            datum.setMagnRx(0);
////            datum.setMagnRy(0);
////            datum.setMagnRz(0);
//
//            datum.setpL01(mod.getData().get(i).getpL01());
//            datum.setpL02(mod.getData().get(i).getpL02());
//            datum.setpL03(mod.getData().get(i).getpL03());
//            datum.setpL04(mod.getData().get(i).getpL04());
//            datum.setpL05(mod.getData().get(i).getpL05());
//            datum.setpL06(mod.getData().get(i).getpL06());
//            datum.setpL07(mod.getData().get(i).getpL07());
//            datum.setpL08(mod.getData().get(i).getpL08());
//            datum.setpL09(mod.getData().get(i).getpL09());
//            datum.setpL10(mod.getData().get(i).getpL10());
//            datum.setpL11(mod.getData().get(i).getpL11());
//            datum.setpL12(mod.getData().get(i).getpL12());
//            datum.setpL13(mod.getData().get(i).getpL13());
//            datum.setpL14(mod.getData().get(i).getpL14());
//            datum.setpL15(mod.getData().get(i).getpL15());
//            datum.setpL16(mod.getData().get(i).getpL16());
//            datum.setGrfL(mod.getData().get(i).getGrfL());
//
//            datum.setAccRx(mod.getData().get(i).getAccRx());
//            datum.setAccRy(mod.getData().get(i).getAccRy());
//            datum.setAccRz(mod.getData().get(i).getAccRz());
//
//            datum.setGyroRx(mod.getData().get(i).getGyroRx());
//            datum.setGyroRy(mod.getData().get(i).getGyroRy());
//            datum.setGyroRz(mod.getData().get(i).getGyroRz());
//
//            datum.setpR01(mod.getData().get(i).getpR01());
//            datum.setpR02(mod.getData().get(i).getpR02());
//            datum.setpR03(mod.getData().get(i).getpR03());
//            datum.setpR04(mod.getData().get(i).getpR04());
//            datum.setpR05(mod.getData().get(i).getpR05());
//            datum.setpR06(mod.getData().get(i).getpR06());
//            datum.setpR07(mod.getData().get(i).getpR07());
//            datum.setpR08(mod.getData().get(i).getpR08());
//            datum.setpR09(mod.getData().get(i).getpR09());
//            datum.setpR10(mod.getData().get(i).getpR10());
//            datum.setpR11(mod.getData().get(i).getpR11());
//            datum.setpR12(mod.getData().get(i).getpR12());
//            datum.setpR13(mod.getData().get(i).getpR13());
//            datum.setpR14(mod.getData().get(i).getpR14());
//            datum.setpR15(mod.getData().get(i).getpR15());
//            datum.setpR16(mod.getData().get(i).getpR16());
//            datum.setGrfR(mod.getData().get(i).getGrfR());
//
//
//            datumList.add(datum);
//
//        }
//        sessionModel.setData(datumList);
//
//
//        //Setup Sole model basic properties
//        sessionModel.setDemo(false);
//        sessionModel.setReleaseDate("2021-11-11T10:05:08.583Z");
//        sessionModel.setVersion(0);
//        sessionModel.setProduct("string");
//
//
//        prefs = SharedPrefManager.getInstance(getContext()).getUser();
//
//        String token = prefs.getToken();
//
//        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getContext());
//        String apiKey = sp.getString("apiKey", "");
//
//        HashMap<String, Object> map = new HashMap<String, Object>();
//        map.put("", sessionModel);
//        String json = null;
//        JSONObject reqbody = new JSONObject();
//        try {
//            reqbody.put("", sessionModel);
//
//
//        } catch (JSONException e) {
//
//            e.printStackTrace();
//        }
//
//        try {
//            json = new ObjectMapper().writeValueAsString(sessionModel);
//
//        } catch (JsonProcessingException e) {
//            e.printStackTrace();
//        }
//
//        String t = reqbody.toString().trim();
//
//        String test = "{\n" +
//                "    product: smartinsole,\n" +
//                "    version: 0.1,\n" +
//                "    releaseDate: 20200505,\n" +
//                "    demo: false,\n" +
//                "    session: {\n" +
//                "        sessionId: 1212121307,\n" +
//                "        patientId: 1212121307,\n" +
//                "        insoleId: 1212121307,\n" +
//                "        startTime: 20200505,\n" +
//                "        endTime: 20200505,\n" +
//                "        isPart: false,\n" +
//                "        sessionType: 0\n" +
//                "    },\n" +
//                "    data: [\n" +
//                "        {\n" +
//                "            timestamp: 0.0,\n" +
//                "            accLx: -0.23877,\n" +
//                "            accLy: 0.036621,\n" +
//                "            accLz: 0.975586,\n" +
//                "            gyroLx: -0.98,\n" +
//                "            gyroLy: 3.78,\n" +
//                "            gyroLz: -0.7,\n" +
//                "            pL01: 5.25,\n" +
//                "            pL02: 4.25,\n" +
//                "            pL03: 4.75,\n" +
//                "            pL04: 5.25,\n" +
//                "            pL05: 3.25,\n" +
//                "            pL06: 0.25,\n" +
//                "            pL07: 0.75,\n" +
//                "            pL08: 0.25,\n" +
//                "            pL09: 2.0,\n" +
//                "            pL10: 1.25,\n" +
//                "            pL11: 1.25,\n" +
//                "            pL12: 0.5,\n" +
//                "            pL13: 0.0,\n" +
//                "            pL14: 4.25,\n" +
//                "            pL15: 0.75,\n" +
//                "            pL16: 0.25,\n" +
//                "            grfL: 394.0,\n" +
//                "            accRx: null,\n" +
//                "            accRy: null,\n" +
//                "            accRz: null,\n" +
//                "            gyroRx: null,\n" +
//                "            gyroRy: null,\n" +
//                "            gyroRz: null,\n" +
//                "            pR01: null,\n" +
//                "            pR02: null,\n" +
//                "            pR03: null,\n" +
//                "            pR04: null,\n" +
//                "            pR05: null,\n" +
//                "            pR06: null,\n" +
//                "            pR07: null,\n" +
//                "            pR08: null,\n" +
//                "            pR09: null,\n" +
//                "            pR10: null,\n" +
//                "            pR11: null,\n" +
//                "            pR12: null,\n" +
//                "            pR13: null,\n" +
//                "            pR14: null,\n" +
//                "            pR15: null,\n" +
//                "            pR16: null,\n" +
//                "            grfR: null\n" +
//                "        },\n" +
//                "    ]\n" +
//                "}".toString().trim();
//
//
//        json = json.toString().replace("part", "isPart");
////        Gson gson = new GsonBuilder().setPrettyPrinting().create();
////        JsonElement jsonElement = gson.fromJson(json, JsonElement.class);
////        JsonObject jobj = jsonElement.getAsJsonObject();
//
//        (Api.getClient().postSession(token.trim(), apiKey.trim(), json)).enqueue(new Callback<Sesion>() {
//            @Override
//            public void onResponse(Call<Sesion> call, Response<Sesion> response) {
//                sessionData = response.body();
//                //String apikey =  response.body();
//                Log.d("response", "");
//
//
//            }
//
//            @Override
//            public void onFailure(Call<Sesion> call, Throwable t) {
//                Log.d("response", t.getStackTrace().toString());
//                Log.d("MainActivity", t.getMessage());
//            }
//
//        });



//
//        final ProgressDialog loading = new ProgressDialog(getContext());
//        loading.setMessage("Please wait...uploading data");
//        loading.setCanceledOnTouchOutside(false);
//        loading.show();
//
//        String postUrl = getString(R.string.base_url) + getString(R.string.post_sessions_url);
//        RequestQueue requestQueue = Volley.newRequestQueue(getContext());
//
//        JSONObject postData = new JSONObject();
//        JSONObject postData2 = new JSONObject();
//
//        JSONObject newData = new JSONObject();
//        JSONArray array = new JSONArray();
//        JSONObject session = new JSONObject();
//        SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getContext());
//        String apiKey = sp.getString("apiKey", "");
//
//
//        try {
//
//            postData.put("product", "string");
//            postData.put("version", 0);
//            postData.put("releaseDate", "2021-11-03T08:38:50.274Z");
//            postData.put("demo", true);
//
//            session.put("sessionId", "string");
//            session.put("patientId", "string");
//            session.put("insoleId", "string");
//            session.put("startTime", "2021-11-07T19:16:28.623Z");
//            session.put("endTime", "2021-11-07T19:16:28.623Z");
//            session.put("isPart", true);
//            session.put("sessionType", 0);
//
//            postData.put("session", session);
//
//
//            newData.put("timestamp", 0);
//            newData.put("accLx", 0);
//            newData.put("accLy", 0);
//            newData.put("accLz", 0);
//            newData.put("gyroLx", 0);
//            newData.put("gyroLy", 0);
//            newData.put("gyroLz", 0);
//            newData.put("pL01", 0);
//            newData.put("pL02", 0);
//            newData.put("pL03", 0);
//            newData.put("pL04", 0);
//            newData.put("pL05", 0);
//            newData.put("pL06", 0);
//            newData.put("pL07", 0);
//            newData.put("pL08", 0);
//            newData.put("pL09", 0);
//            newData.put("pL10", 0);
//            newData.put("pL11", 0);
//            newData.put("pL12", 0);
//            newData.put("pL13", 0);
//            newData.put("pL14", 0);
//            newData.put("pL15", 0);
//            newData.put("pL16", 0);
//            newData.put("grfL", 0);
//            newData.put("accRx", 0);
//            newData.put("accRy", 0);
//            newData.put("accRz", 0);
//            newData.put("gyroRx", 0);
//            newData.put("gyroRy", 0);
//            newData.put("gyroRz", 0);
//            newData.put("pR01", 0);
//            newData.put("pR02", 0);
//            newData.put("pR03", 0);
//            newData.put("pR04", 0);
//            newData.put("pR05", 0);
//            newData.put("pR06", 0);
//            newData.put("pR07", 0);
//            newData.put("pR08", 0);
//            newData.put("pR09", 0);
//            newData.put("pR10", 0);
//            newData.put("pR11", 0);
//            newData.put("pR12", 0);
//            newData.put("pR13", 0);
//            newData.put("pR14", 0);
//            newData.put("pR15", 0);
//            newData.put("pR16", 0);
//            newData.put("grfR", 0);
//
//            List<JSONObject> datumList = new ArrayList<>();
//
//            datumList.add(newData);
//            for(int i = 0; i < datumList.size(); i++) {
//                array.put(datumList.get(i));
//            }
//
//            try {
//                postData.put("x-patient-api-key", apiKey);
//                postData.put("data", array);
//
//
//
//            } catch(JSONException e) {
//                e.printStackTrace();
//            }
//
//            String t = "";
//
//        } catch (JSONException e) {
//            e.printStackTrace();
//        }
//        JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.POST, postUrl, postData, new Response.Listener<JSONObject>() {
//            @Override
//            public void onResponse(JSONObject response) {
//                Toast.makeText(getContext(), "Response: "+response, Toast.LENGTH_LONG).show();
//            }
//        },new Response.ErrorListener() {
//
////                JsonObjectRequest  request = new JsonObjectRequest (Request.Method.POST, postUrl,postData, new Response.Listener<JSONObject>() {
////            @Override
////            public void onResponse(JSONObject response) {
////
////
////                if (response.has("sessionType")) {
////                    String t ="";
////                }
////
////            }
////
////
////
////
////        }, new Response.ErrorListener() {
//            @Override
//            public void onErrorResponse(VolleyError error) {
//                if (error == null || error.networkResponse == null) {
//                    return;
//                }
//
//                String body;
//                //get status code here
//                final String statusCode = String.valueOf(error.networkResponse.statusCode);
//                //get response body and parse with appropriate encoding
//                try {
//                    body = new String(error.networkResponse.data,"UTF-8");
//                } catch (UnsupportedEncodingException e) {
//                    // exception
//                }
//
//                //do stuff with the body...
//            }
//        })
//        {
////            @Override
////            protected Map<String, String> getParams() throws AuthFailureError {
////                Map<String, String> params = new HashMap<>();
////
////                params.put("product", "string");
////                params.put("version", String.valueOf(0));
////                params.put("releaseDate", "2021-11-03T08:38:50.274Z");
////                params.put("demo", String.valueOf(true));
////
//////                Gson gson=new Gson();
//////                String json=gson.toJson(createjsonObject());
//////                String data = new Gson().toJson(json);
//////                data = data.replace("\\", "");
//////                params.put("session", data);
////
////                params.put("session", session.toString());
////
//
////
////
////
////
////                return params;
////            }
//
//            @Override
//            public Priority getPriority() {
//                return Priority.HIGH;
//            }
//
//            @Override
//            protected Map<String,String> getParams(){
//                Map<String, String> params = new HashMap<String, String>();
//                SharedPreferences sp = PreferenceManager.getDefaultSharedPreferences(getContext());
//                String apiKey = sp.getString("apiKey", "");
//                params.put("x-patient-api-key", "apiKey");
//
//                return params;
//            }
//
//            @Override
//            public Map<String, String> getHeaders() throws AuthFailureError {
//                Map<String, String> headers = new HashMap<>();
//                prefs = SharedPrefManager.getInstance(getContext()).getUser();
//
//                String token = prefs.getToken();
//                headers.put("x-token", token);
//                return headers;
//            }
//        };
////        {
////            @Override
////            public Priority getPriority() {
////                return Priority.HIGH;
////            }
////
////            @Override
////            protected Map<String, String> getParams() throws AuthFailureError {
////                Map<String, String> headers = new HashMap<>();
////
////                //String token = prefs.getJWToken();
////
////                //headers.put("Authorization", "Bearer "+ token);
////                //headers.put("Content-Type", "application/json");
////                //headers.put("accept", "application/json");
////
////                return headers;
////            }
////
////
////        };
//
//        requestQueue.add(jsonObjectRequest);

    }
