public void postSession_23_9(){

        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());
        JSONObject object = new JSONObject();
        try {
            //input your API parameters
            object.put("parameter","value");
            object.put("parameter","value");
        } catch (JSONException e) {
            e.printStackTrace();
        }

        String string = "Test2309";

        //TODO: Change every time the session id
//        String string = "{\n" +
//                "    \"product\": \"smartinsole\",\n" +
//                "    \"version\": 0.1,\n" +
//                "    \"releaseDate\": \"2020-05-05T00:00:00.000Z\",\n" +
//                "    \"demo\": false,\n" +
//                "    \"session\": {\n" +
//                "        \"sessionId\": \"0000000046\",\n" +
//                "        \"patientId\": \"0000000046\",\n" +
//                "        \"insoleId\": \"0000000046\",\n" +
//                "        \"startTime\": \"2020-05-05T00:00:00.000Z\",\n" +
//                "        \"endTime\": \"2020-05-05T00:00:00.000Z\",\n" +
//                "        \"isPart\": false,\n" +
//                "        \"sessionType\": \"3\",\n" +
//                "        \"insoleType\": \"moticon\",\n" +
//                "        \"walkingSpeed\": \"na\",\n" +
//                "        \"medication\": \"unknown\",\n" +
//                "        \"group\": \"elderly\"\n" +
//                "    },\n" +
//                "    \"data\": [\n" +
//                "        {\n" +
//                "            \"timestamp\": 0.0,\n" +
//                "            \"accLx\": 0.19043,\n" +
//                "            \"accLy\": 0.038574,\n" +
//                "            \"accLz\": 0.970215,\n" +
//                "            \"gyroLx\": 1.33,\n" +
//                "            \"gyroLy\": 4.62,\n" +
//                "            \"gyroLz\": 0.49,\n" +
//                "            \"magLx\": 0.49,\n" +
//                "            \"magLy\": 0.49,\n" +
//                "            \"magLz\": 0.49,\n" +
//                "            \"pL01\": 5.25,\n" +
//                "            \"pL02\": 4.75,\n" +
//                "            \"pL03\": 5.25,\n" +
//                "            \"pL04\": 3.5,\n" +
//                "            \"pL05\": 5.25,\n" +
//                "            \"pL06\": 1.25,\n" +
//                "            \"pL07\": 0.75,\n" +
//                "            \"pL08\": 0.0,\n" +
//                "            \"pL09\": 0.5,\n" +
//                "            \"pL10\": 2.0,\n" +
//                "            \"pL11\": 2.5,\n" +
//                "            \"pL12\": 0.0,\n" +
//                "            \"pL13\": 0.0,\n" +
//                "            \"pL14\": 0.75,\n" +
//                "            \"pL15\": 0.25,\n" +
//                "            \"pL16\": 0.0,\n" +
//                "            \"grfL\": 372.0,\n" +
//                "            \"accRx\": null,\n" +
//                "            \"accRy\": null,\n" +
//                "            \"accRz\": null,\n" +
//                "            \"gyroRx\": null,\n" +
//                "            \"gyroRy\": null,\n" +
//                "            \"gyroRz\": null,\n" +
//                "            \"magRx\": null,\n" +
//                "            \"magRy\": null,\n" +
//                "            \"magRz\": null,\n" +
//                "            \"pR01\": null,\n" +
//                "            \"pR02\": null,\n" +
//                "            \"pR03\": null,\n" +
//                "            \"pR04\": null,\n" +
//                "            \"pR05\": null,\n" +
//                "            \"pR06\": null,\n" +
//                "            \"pR07\": null,\n" +
//                "            \"pR08\": null,\n" +
//                "            \"pR09\": null,\n" +
//                "            \"pR10\": null,\n" +
//                "            \"pR11\": null,\n" +
//                "            \"pR12\": null,\n" +
//                "            \"pR13\": null,\n" +
//                "            \"pR14\": null,\n" +
//                "            \"pR15\": null,\n" +
//                "            \"pR16\": null,\n" +
//                "            \"grfR\": null\n" +
//                "        \n" +
//                "       }\n" +
//                "    ]\n" +
//                "}";
        try {
            JSONObject json1 = new JSONObject(string);
            String postUrl = getString(R.string.base_url) + getString(R.string.post_sessions_url);
            JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.POST, postUrl, json1,
                    new Response.Listener<JSONObject>() {
                        @Override
                        public void onResponse(JSONObject response) {
                            Log.d("response", "");
                        }
                    }, new Response.ErrorListener() {
                @Override
                public void onErrorResponse(VolleyError error) {


                    Toast.makeText(getActivity(), "Error occurred", Toast.LENGTH_SHORT).show();
                }
            }) {
                @Override
                public Priority getPriority() {
                    return Priority.HIGH;
                }

                @Override
                protected Map<String, String> getParams() throws AuthFailureError {
                    Map<String, String> params = new HashMap<>();


                    String apiKey = prefs.getApikey();
                    params.put("x-patient-api-key", apiKey);

                    return params;
                }

                @Override
                public Map<String, String> getHeaders() throws AuthFailureError {
                    Map<String, String> headers = new HashMap<>();
                    headers.put("Content-Type", "application/json; charset=UTF-8");
                    prefs = SharedPrefManager.getInstance(getActivity()).getUser();

                    String token = prefs.getToken();
                    headers.put("x-token", token);
                    return headers;
                }

            };

            requestQueue.add(jsonObjectRequest);

        } catch (JSONException e) {
            e.printStackTrace();
        };
    }
