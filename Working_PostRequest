public void postSession_23_9() {
        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());

        String string = "";

        try {
            JSONObject json1 = new JSONObject(string);
            String postUrl = getString(R.string.base_url) + getString(R.string.post_sessions_url);
            JsonObjectRequest jsonObjectRequest = new JsonObjectRequest(Request.Method.POST, postUrl, json1,
                    new Response.Listener<JSONObject>() {
                        @Override
                        public void onResponse(JSONObject response) {
                            Log.d("response", "");
                        }
                    }, new Response.ErrorListener() {
                @Override
                public void onErrorResponse(VolleyError error) {
                    Toast.makeText(getActivity(), "Error occurred", Toast.LENGTH_SHORT).show();
                }
            }) {
                @Override
                public Priority getPriority() {
                    return Priority.HIGH;
                }

                @Override
                protected Map<String, String> getParams() throws AuthFailureError {
                    Map<String, String> params = new HashMap<>();

                    params.put("smtcode", smt);

                    return params;
                }

                @Override
                public Map<String, String> getHeaders() throws AuthFailureError {
                    Map<String, String> headers = new HashMap<>();
                    headers.put("Content-Type", "application/json; charset=UTF-8");
                    prefs = SharedPrefManager.getInstance(getActivity()).getUser();

                    String token = prefs.getToken();
                    token = "";
                    headers.put("xtoken", token);

                    String apiKey = prefs.getApikey();
                    apiKey = "";
                    headers.put("xapikey", apiKey);

                    return headers;
                }

            };

            requestQueue.add(jsonObjectRequest);

        } catch (JSONException e) {
            e.printStackTrace();
        };
    }
